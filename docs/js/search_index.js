var search_data = {"index":{"searchIndex":["energia","grupo_alimentos","lista","object","venergetico","<=>()","add()","each()","extract_beg()","extract_end()","get_glucidos()","get_lipidos()","get_nombre()","get_proteinas()","get_valor_energetico()","insert_single()","new()","new()","new()","to_s()","to_s()","code_of_conduct","gemfile","gemfile.lock","guardfile","readme","rakefile","untitled","setup","v_energetico.gemspec"],"longSearchIndex":["energia","grupo_alimentos","lista","object","venergetico","energia#<=>()","grupo_alimentos#add()","lista#each()","lista#extract_beg()","lista#extract_end()","energia#get_glucidos()","energia#get_lipidos()","energia#get_nombre()","energia#get_proteinas()","energia#get_valor_energetico()","lista#insert_single()","energia::new()","grupo_alimentos::new()","lista::new()","energia#to_s()","grupo_alimentos#to_s()","","","","","","","","",""],"info":[["Energia","","Energia.html","","<p>Clase energía\n"],["Grupo_alimentos","","Grupo_alimentos.html","","<p>Clase hija de Energia, contiene el nombre de un grupo de alimentos además\nde un objeto Energía\n"],["Lista","","Lista.html","","<p>Clase lista\n"],["Object","","Object.html","",""],["VEnergetico","","VEnergetico.html","",""],["<=>","Energia","Energia.html#method-i-3C-3D-3E","(other)","<p>Nos permite comparar objetos pertenecientes a Energia\n"],["add","Grupo_alimentos","Grupo_alimentos.html#method-i-add","(a,b,c,d)",""],["each","Lista","Lista.html#method-i-each","()","<p>Nos permite enumerar la clase lista\n"],["extract_beg","Lista","Lista.html#method-i-extract_beg","()","<p>Método que nos permite extraer un nodo de la cabeza\n"],["extract_end","Lista","Lista.html#method-i-extract_end","()","<p>Método que nos permite extraer un nodo de la cola\n"],["get_glucidos","Energia","Energia.html#method-i-get_glucidos","()","<p>Devuelve los glúcidos de un alimento\n"],["get_lipidos","Energia","Energia.html#method-i-get_lipidos","()","<p>Devuelve los lípidos de un alimento\n"],["get_nombre","Energia","Energia.html#method-i-get_nombre","()","<p>Devuelve el nombre de un alimento\n"],["get_proteinas","Energia","Energia.html#method-i-get_proteinas","()","<p>Devuelve las proteínas de un alimento\n"],["get_valor_energetico","Energia","Energia.html#method-i-get_valor_energetico","()","<p>Calcula el valor energetico de un alimento\n"],["insert_single","Lista","Lista.html#method-i-insert_single","(valor)","<p>Método que nos permite insertar un nuevo valor por el principio\n"],["new","Energia","Energia.html#method-c-new","(a,b,c,d)",""],["new","Grupo_alimentos","Grupo_alimentos.html#method-c-new","(a,b,c,d,e)",""],["new","Lista","Lista.html#method-c-new","()",""],["to_s","Energia","Energia.html#method-i-to_s","()",""],["to_s","Grupo_alimentos","Grupo_alimentos.html#method-i-to_s","()",""],["CODE_OF_CONDUCT","","CODE_OF_CONDUCT_md.html","","<p>Contributor Covenant Code of Conduct\n<p>Our Pledge\n<p>In the interest of fostering an open and welcoming environment, …\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org”\n<p>git_source(:github) {|repo_name| “github.com/#{repo_name}” } …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  V_energetico (0.1.0)</pre>\n<p>GEM\n"],["Guardfile","","Guardfile.html","","<p># A sample Guardfile # More info at github.com/guard/guard#readme\n<p>## Uncomment and set this to only include …\n"],["README","","README_md.html","","<p>VEnergetico\n<p>Welcome to your new gem! In this directory, you&#39;ll find the files you\nneed to be able …\n"],["Rakefile","","Rakefile.html","","<p>task :default =&gt; :spec\n<p>task :spec do\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">sh</span> <span class=\"ruby-string\">&quot;rspec -I. spec/v_ener_spec.rb&quot;</span>\n</pre>\n"],["Untitled","","Untitled.html","",""],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"],["v_energetico.gemspec","","v_energetico_gemspec.html","","<p>lib = File.expand_path(“../lib”, __FILE__) $LOAD_PATH.unshift(lib) unless\n$LOAD_PATH.include?(lib) …\n"]]}}